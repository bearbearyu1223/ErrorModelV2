/**
 */
package org.osate.xtext.aadl2.errormodel.errorModel.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.osate.xtext.aadl2.errormodel.errorModel.util.ErrorModelAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ErrorModelItemProviderAdapterFactory extends ErrorModelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ErrorModelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelGrammarRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorModelGrammarRootItemProvider errorModelGrammarRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelGrammarRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorModelGrammarRootAdapter() {
		if (errorModelGrammarRootItemProvider == null) {
			errorModelGrammarRootItemProvider = new ErrorModelGrammarRootItemProvider(this);
		}

		return errorModelGrammarRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelSubclause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorModelSubclauseItemProvider errorModelSubclauseItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelSubclause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorModelSubclauseAdapter() {
		if (errorModelSubclauseItemProvider == null) {
			errorModelSubclauseItemProvider = new ErrorModelSubclauseItemProvider(this);
		}

		return errorModelSubclauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorModelLibraryItemProvider errorModelLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorModelLibraryAdapter() {
		if (errorModelLibraryItemProvider == null) {
			errorModelLibraryItemProvider = new ErrorModelLibraryItemProvider(this);
		}

		return errorModelLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorTypes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorTypesItemProvider errorTypesItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorTypes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorTypesAdapter() {
		if (errorTypesItemProvider == null) {
			errorTypesItemProvider = new ErrorTypesItemProvider(this);
		}

		return errorTypesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorTypeItemProvider errorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorTypeAdapter() {
		if (errorTypeItemProvider == null) {
			errorTypeItemProvider = new ErrorTypeItemProvider(this);
		}

		return errorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeSetItemProvider typeSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeSetAdapter() {
		if (typeSetItemProvider == null) {
			typeSetItemProvider = new TypeSetItemProvider(this);
		}

		return typeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeToken} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeTokenItemProvider typeTokenItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeToken}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeTokenAdapter() {
		if (typeTokenItemProvider == null) {
			typeTokenItemProvider = new TypeTokenItemProvider(this);
		}

		return typeTokenItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeTransformationSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeTransformationSetItemProvider typeTransformationSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeTransformationSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeTransformationSetAdapter() {
		if (typeTransformationSetItemProvider == null) {
			typeTransformationSetItemProvider = new TypeTransformationSetItemProvider(this);
		}

		return typeTransformationSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeTransformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeTransformationItemProvider typeTransformationItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeTransformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeTransformationAdapter() {
		if (typeTransformationItemProvider == null) {
			typeTransformationItemProvider = new TypeTransformationItemProvider(this);
		}

		return typeTransformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeMappingSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeMappingSetItemProvider typeMappingSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeMappingSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeMappingSetAdapter() {
		if (typeMappingSetItemProvider == null) {
			typeMappingSetItemProvider = new TypeMappingSetItemProvider(this);
		}

		return typeMappingSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeMappingItemProvider typeMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeMappingAdapter() {
		if (typeMappingItemProvider == null) {
			typeMappingItemProvider = new TypeMappingItemProvider(this);
		}

		return typeMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPropagations} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorPropagationsItemProvider errorPropagationsItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPropagations}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorPropagationsAdapter() {
		if (errorPropagationsItemProvider == null) {
			errorPropagationsItemProvider = new ErrorPropagationsItemProvider(this);
		}

		return errorPropagationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorPropagationItemProvider errorPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorPropagationAdapter() {
		if (errorPropagationItemProvider == null) {
			errorPropagationItemProvider = new ErrorPropagationItemProvider(this);
		}

		return errorPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.FeatureorPPReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureorPPReferenceItemProvider featureorPPReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.FeatureorPPReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureorPPReferenceAdapter() {
		if (featureorPPReferenceItemProvider == null) {
			featureorPPReferenceItemProvider = new FeatureorPPReferenceItemProvider(this);
		}

		return featureorPPReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorFlowItemProvider errorFlowItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorFlowAdapter() {
		if (errorFlowItemProvider == null) {
			errorFlowItemProvider = new ErrorFlowItemProvider(this);
		}

		return errorFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorSource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorSourceItemProvider errorSourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorSource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorSourceAdapter() {
		if (errorSourceItemProvider == null) {
			errorSourceItemProvider = new ErrorSourceItemProvider(this);
		}

		return errorSourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorStateOrTypeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBehaviorStateOrTypeSetItemProvider errorBehaviorStateOrTypeSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorStateOrTypeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBehaviorStateOrTypeSetAdapter() {
		if (errorBehaviorStateOrTypeSetItemProvider == null) {
			errorBehaviorStateOrTypeSetItemProvider = new ErrorBehaviorStateOrTypeSetItemProvider(this);
		}

		return errorBehaviorStateOrTypeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorSink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorSinkItemProvider errorSinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorSink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorSinkAdapter() {
		if (errorSinkItemProvider == null) {
			errorSinkItemProvider = new ErrorSinkItemProvider(this);
		}

		return errorSinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorPathItemProvider errorPathItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorPathAdapter() {
		if (errorPathItemProvider == null) {
			errorPathItemProvider = new ErrorPathItemProvider(this);
		}

		return errorPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPaths} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropagationPathsItemProvider propagationPathsItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPaths}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropagationPathsAdapter() {
		if (propagationPathsItemProvider == null) {
			propagationPathsItemProvider = new PropagationPathsItemProvider(this);
		}

		return propagationPathsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropagationPointItemProvider propagationPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropagationPointAdapter() {
		if (propagationPointItemProvider == null) {
			propagationPointItemProvider = new PropagationPointItemProvider(this);
		}

		return propagationPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPointConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropagationPointConnectionItemProvider propagationPointConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.PropagationPointConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropagationPointConnectionAdapter() {
		if (propagationPointConnectionItemProvider == null) {
			propagationPointConnectionItemProvider = new PropagationPointConnectionItemProvider(this);
		}

		return propagationPointConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.QualifiedPropagationPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualifiedPropagationPointItemProvider qualifiedPropagationPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.QualifiedPropagationPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualifiedPropagationPointAdapter() {
		if (qualifiedPropagationPointItemProvider == null) {
			qualifiedPropagationPointItemProvider = new QualifiedPropagationPointItemProvider(this);
		}

		return qualifiedPropagationPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorStateMachine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBehaviorStateMachineItemProvider errorBehaviorStateMachineItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorStateMachine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBehaviorStateMachineAdapter() {
		if (errorBehaviorStateMachineItemProvider == null) {
			errorBehaviorStateMachineItemProvider = new ErrorBehaviorStateMachineItemProvider(this);
		}

		return errorBehaviorStateMachineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBehaviorEventItemProvider errorBehaviorEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBehaviorEventAdapter() {
		if (errorBehaviorEventItemProvider == null) {
			errorBehaviorEventItemProvider = new ErrorBehaviorEventItemProvider(this);
		}

		return errorBehaviorEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorEventItemProvider errorEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorEventAdapter() {
		if (errorEventItemProvider == null) {
			errorEventItemProvider = new ErrorEventItemProvider(this);
		}

		return errorEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.RepairEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepairEventItemProvider repairEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.RepairEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepairEventAdapter() {
		if (repairEventItemProvider == null) {
			repairEventItemProvider = new RepairEventItemProvider(this);
		}

		return repairEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.RecoverEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecoverEventItemProvider recoverEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.RecoverEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecoverEventAdapter() {
		if (recoverEventItemProvider == null) {
			recoverEventItemProvider = new RecoverEventItemProvider(this);
		}

		return recoverEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBehaviorStateItemProvider errorBehaviorStateItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBehaviorStateAdapter() {
		if (errorBehaviorStateItemProvider == null) {
			errorBehaviorStateItemProvider = new ErrorBehaviorStateItemProvider(this);
		}

		return errorBehaviorStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorTransition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorBehaviorTransitionItemProvider errorBehaviorTransitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorBehaviorTransition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorBehaviorTransitionAdapter() {
		if (errorBehaviorTransitionItemProvider == null) {
			errorBehaviorTransitionItemProvider = new ErrorBehaviorTransitionItemProvider(this);
		}

		return errorBehaviorTransitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TransitionBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransitionBranchItemProvider transitionBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TransitionBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransitionBranchAdapter() {
		if (transitionBranchItemProvider == null) {
			transitionBranchItemProvider = new TransitionBranchItemProvider(this);
		}

		return transitionBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.BranchValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BranchValueItemProvider branchValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.BranchValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBranchValueAdapter() {
		if (branchValueItemProvider == null) {
			branchValueItemProvider = new BranchValueItemProvider(this);
		}

		return branchValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ConnectionErrorBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionErrorBehaviorItemProvider connectionErrorBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ConnectionErrorBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionErrorBehaviorAdapter() {
		if (connectionErrorBehaviorItemProvider == null) {
			connectionErrorBehaviorItemProvider = new ConnectionErrorBehaviorItemProvider(this);
		}

		return connectionErrorBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ConnectionErrorSource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionErrorSourceItemProvider connectionErrorSourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ConnectionErrorSource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionErrorSourceAdapter() {
		if (connectionErrorSourceItemProvider == null) {
			connectionErrorSourceItemProvider = new ConnectionErrorSourceItemProvider(this);
		}

		return connectionErrorSourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.EBSMUseContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EBSMUseContextItemProvider ebsmUseContextItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.EBSMUseContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEBSMUseContextAdapter() {
		if (ebsmUseContextItemProvider == null) {
			ebsmUseContextItemProvider = new EBSMUseContextItemProvider(this);
		}

		return ebsmUseContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeUseContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeUseContextItemProvider typeUseContextItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.TypeUseContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeUseContextAdapter() {
		if (typeUseContextItemProvider == null) {
			typeUseContextItemProvider = new TypeUseContextItemProvider(this);
		}

		return typeUseContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ComponentErrorBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentErrorBehaviorItemProvider componentErrorBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ComponentErrorBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentErrorBehaviorAdapter() {
		if (componentErrorBehaviorItemProvider == null) {
			componentErrorBehaviorItemProvider = new ComponentErrorBehaviorItemProvider(this);
		}

		return componentErrorBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ConditionExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionExpressionItemProvider conditionExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ConditionExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionExpressionAdapter() {
		if (conditionExpressionItemProvider == null) {
			conditionExpressionItemProvider = new ConditionExpressionItemProvider(this);
		}

		return conditionExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.OrmoreExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrmoreExpressionItemProvider ormoreExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.OrmoreExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrmoreExpressionAdapter() {
		if (ormoreExpressionItemProvider == null) {
			ormoreExpressionItemProvider = new OrmoreExpressionItemProvider(this);
		}

		return ormoreExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.OrlessExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrlessExpressionItemProvider orlessExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.OrlessExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrlessExpressionAdapter() {
		if (orlessExpressionItemProvider == null) {
			orlessExpressionItemProvider = new OrlessExpressionItemProvider(this);
		}

		return orlessExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ConditionElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionElementItemProvider conditionElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ConditionElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionElementAdapter() {
		if (conditionElementItemProvider == null) {
			conditionElementItemProvider = new ConditionElementItemProvider(this);
		}

		return conditionElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.EventOrPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventOrPropagationItemProvider eventOrPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.EventOrPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventOrPropagationAdapter() {
		if (eventOrPropagationItemProvider == null) {
			eventOrPropagationItemProvider = new EventOrPropagationItemProvider(this);
		}

		return eventOrPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.OutgoingPropagationCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutgoingPropagationConditionItemProvider outgoingPropagationConditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.OutgoingPropagationCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutgoingPropagationConditionAdapter() {
		if (outgoingPropagationConditionItemProvider == null) {
			outgoingPropagationConditionItemProvider = new OutgoingPropagationConditionItemProvider(this);
		}

		return outgoingPropagationConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorDetection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorDetectionItemProvider errorDetectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorDetection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorDetectionAdapter() {
		if (errorDetectionItemProvider == null) {
			errorDetectionItemProvider = new ErrorDetectionItemProvider(this);
		}

		return errorDetectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorCodeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorCodeValueItemProvider errorCodeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorCodeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorCodeValueAdapter() {
		if (errorCodeValueItemProvider == null) {
			errorCodeValueItemProvider = new ErrorCodeValueItemProvider(this);
		}

		return errorCodeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorStateToModeMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorStateToModeMappingItemProvider errorStateToModeMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.ErrorStateToModeMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorStateToModeMappingAdapter() {
		if (errorStateToModeMappingItemProvider == null) {
			errorStateToModeMappingItemProvider = new ErrorStateToModeMappingItemProvider(this);
		}

		return errorStateToModeMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.CompositeErrorBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeErrorBehaviorItemProvider compositeErrorBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.CompositeErrorBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeErrorBehaviorAdapter() {
		if (compositeErrorBehaviorItemProvider == null) {
			compositeErrorBehaviorItemProvider = new CompositeErrorBehaviorItemProvider(this);
		}

		return compositeErrorBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.CompositeState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeStateItemProvider compositeStateItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.CompositeState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeStateAdapter() {
		if (compositeStateItemProvider == null) {
			compositeStateItemProvider = new CompositeStateItemProvider(this);
		}

		return compositeStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.SubcomponentElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubcomponentElementItemProvider subcomponentElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.SubcomponentElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubcomponentElementAdapter() {
		if (subcomponentElementItemProvider == null) {
			subcomponentElementItemProvider = new SubcomponentElementItemProvider(this);
		}

		return subcomponentElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.OrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrExpressionItemProvider orExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.OrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrExpressionAdapter() {
		if (orExpressionItemProvider == null) {
			orExpressionItemProvider = new OrExpressionItemProvider(this);
		}

		return orExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.AndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndExpressionItemProvider andExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.AndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndExpressionAdapter() {
		if (andExpressionItemProvider == null) {
			andExpressionItemProvider = new AndExpressionItemProvider(this);
		}

		return andExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.SOrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SOrExpressionItemProvider sOrExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.SOrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSOrExpressionAdapter() {
		if (sOrExpressionItemProvider == null) {
			sOrExpressionItemProvider = new SOrExpressionItemProvider(this);
		}

		return sOrExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.osate.xtext.aadl2.errormodel.errorModel.SAndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SAndExpressionItemProvider sAndExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.osate.xtext.aadl2.errormodel.errorModel.SAndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSAndExpressionAdapter() {
		if (sAndExpressionItemProvider == null) {
			sAndExpressionItemProvider = new SAndExpressionItemProvider(this);
		}

		return sAndExpressionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (errorModelGrammarRootItemProvider != null) errorModelGrammarRootItemProvider.dispose();
		if (errorModelSubclauseItemProvider != null) errorModelSubclauseItemProvider.dispose();
		if (errorModelLibraryItemProvider != null) errorModelLibraryItemProvider.dispose();
		if (errorTypesItemProvider != null) errorTypesItemProvider.dispose();
		if (errorTypeItemProvider != null) errorTypeItemProvider.dispose();
		if (typeSetItemProvider != null) typeSetItemProvider.dispose();
		if (typeTokenItemProvider != null) typeTokenItemProvider.dispose();
		if (typeTransformationSetItemProvider != null) typeTransformationSetItemProvider.dispose();
		if (typeTransformationItemProvider != null) typeTransformationItemProvider.dispose();
		if (typeMappingSetItemProvider != null) typeMappingSetItemProvider.dispose();
		if (typeMappingItemProvider != null) typeMappingItemProvider.dispose();
		if (errorPropagationsItemProvider != null) errorPropagationsItemProvider.dispose();
		if (errorPropagationItemProvider != null) errorPropagationItemProvider.dispose();
		if (featureorPPReferenceItemProvider != null) featureorPPReferenceItemProvider.dispose();
		if (errorFlowItemProvider != null) errorFlowItemProvider.dispose();
		if (errorSourceItemProvider != null) errorSourceItemProvider.dispose();
		if (errorBehaviorStateOrTypeSetItemProvider != null) errorBehaviorStateOrTypeSetItemProvider.dispose();
		if (errorSinkItemProvider != null) errorSinkItemProvider.dispose();
		if (errorPathItemProvider != null) errorPathItemProvider.dispose();
		if (propagationPathsItemProvider != null) propagationPathsItemProvider.dispose();
		if (propagationPointItemProvider != null) propagationPointItemProvider.dispose();
		if (propagationPointConnectionItemProvider != null) propagationPointConnectionItemProvider.dispose();
		if (qualifiedPropagationPointItemProvider != null) qualifiedPropagationPointItemProvider.dispose();
		if (errorBehaviorStateMachineItemProvider != null) errorBehaviorStateMachineItemProvider.dispose();
		if (errorBehaviorEventItemProvider != null) errorBehaviorEventItemProvider.dispose();
		if (errorEventItemProvider != null) errorEventItemProvider.dispose();
		if (repairEventItemProvider != null) repairEventItemProvider.dispose();
		if (recoverEventItemProvider != null) recoverEventItemProvider.dispose();
		if (errorBehaviorStateItemProvider != null) errorBehaviorStateItemProvider.dispose();
		if (errorBehaviorTransitionItemProvider != null) errorBehaviorTransitionItemProvider.dispose();
		if (transitionBranchItemProvider != null) transitionBranchItemProvider.dispose();
		if (branchValueItemProvider != null) branchValueItemProvider.dispose();
		if (connectionErrorBehaviorItemProvider != null) connectionErrorBehaviorItemProvider.dispose();
		if (connectionErrorSourceItemProvider != null) connectionErrorSourceItemProvider.dispose();
		if (ebsmUseContextItemProvider != null) ebsmUseContextItemProvider.dispose();
		if (typeUseContextItemProvider != null) typeUseContextItemProvider.dispose();
		if (componentErrorBehaviorItemProvider != null) componentErrorBehaviorItemProvider.dispose();
		if (conditionExpressionItemProvider != null) conditionExpressionItemProvider.dispose();
		if (ormoreExpressionItemProvider != null) ormoreExpressionItemProvider.dispose();
		if (orlessExpressionItemProvider != null) orlessExpressionItemProvider.dispose();
		if (conditionElementItemProvider != null) conditionElementItemProvider.dispose();
		if (eventOrPropagationItemProvider != null) eventOrPropagationItemProvider.dispose();
		if (outgoingPropagationConditionItemProvider != null) outgoingPropagationConditionItemProvider.dispose();
		if (errorDetectionItemProvider != null) errorDetectionItemProvider.dispose();
		if (errorCodeValueItemProvider != null) errorCodeValueItemProvider.dispose();
		if (errorStateToModeMappingItemProvider != null) errorStateToModeMappingItemProvider.dispose();
		if (compositeErrorBehaviorItemProvider != null) compositeErrorBehaviorItemProvider.dispose();
		if (compositeStateItemProvider != null) compositeStateItemProvider.dispose();
		if (subcomponentElementItemProvider != null) subcomponentElementItemProvider.dispose();
		if (orExpressionItemProvider != null) orExpressionItemProvider.dispose();
		if (andExpressionItemProvider != null) andExpressionItemProvider.dispose();
		if (sOrExpressionItemProvider != null) sOrExpressionItemProvider.dispose();
		if (sAndExpressionItemProvider != null) sAndExpressionItemProvider.dispose();
	}

}
